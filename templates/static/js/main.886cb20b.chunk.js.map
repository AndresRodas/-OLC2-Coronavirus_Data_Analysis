{"version":3,"sources":["pages/Home.js","config/API.js","services/DataService.js","pages/Data.js","pages/Variables.js","DocuPDF.js","pages/Graphics.js","pages/Menu.js","App.js","index.js"],"names":["Home","className","style","fontFamily","legend","value","React","Component","URL","DataService","file","x","y","z","pred","pais","ext","a","formData","FormData","append","fetch","method","body","res","json","depto","Data","props","dataService","myUploader","callback","files","state","title","subTitle","name","customUpload","uploadHandler","this","Variables","onPredictChange","e","setState","predict","Rep1","data","alert","split","length","Report_1","response","names","download_title","x_name","y_name","predict_quest","text","resumen","text1","pendiente","text2","rmse","r2","report","Object","assign","Rep2","Report_2","predict_val","error","Rep3","Report_3","Rep4","Report_4","parseInt","Rep5","Rep6","Rep8","Report_8","Rep9","Report_9","console","log","z_name","predictions","label","options","onChange","placeholder","htmlFor","id","type","target","icon","onClick","DocuPDF","content","size","display","flexDirection","backgroundColor","justifyContent","alignItems","padding","textAlign","fontSize","marginTop","color","fontStyle","marginLeft","marginRight","position","top","width","Graphics","labels","datasets","predict_list","fill","borderColor","borderWidth","header","height","document","fileName","Menu","activeIndex","items","res_data","res_report","model","onTabChange","index","getResponseData","bind","GraphReport","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.886cb20b.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport { Fieldset } from 'primereact/fieldset';\r\nimport { InputText } from \"primereact/inputtext\";\r\n\r\nclass Home extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"p-m-6\">\r\n                <h1 className=\"p-text-bold\" style={{fontFamily: \"cursive\"}} >Coronavirus Data Analysis</h1>\r\n                <Fieldset legend=\"Resumen\" className=\"p-shadow-5\" >\r\n                    <p>Durante la emergencia sanitaria provocada por el COVID-19, se ha observado \r\n                        un notable incremento en la aplicación de nuevas tecnologías al campo de \r\n                        la salud y la investigación. Desde la creación de todo tipo de dispositivos \r\n                        inteligentes destinados a detectar el más mínimo síntoma indicativo de contagio, \r\n                        hasta el diseño de nuevos patrones de investigación en la cura del nuevo coronavirus.</p>\r\n                    <p>Sin duda, la IA (Inteligencia Artificial) ha estado presente en todas y cada una \r\n                        de las etapas de esta pandemia, e incluso en momentos previos a ella. En este \r\n                        sentido, se trató de una startup canadiense –BlueDot- que, gracias a un algoritmo \r\n                        basado en inteligencia artificial, logró predecirlo.\r\n                        Mediante el procesamiento y análisis de noticias de todos los países del mundo, \r\n                        junto con información relacionada con rutas de vuelos comerciales y brotes de \r\n                        enfermedades, pudieron predecir, no solo la existencia de una enfermedad \r\n                        potencialmente pandémica, sino también el epicentro de la enfermedad. Así mismo, \r\n                        como su trayectoria más inmediata.</p>\r\n                    <p>Así, la aplicación de la IA en esta pandemia global ha supuesto un antes y un \r\n                        después en el campo epidemiológico, ya que no solo ha permitido establecer un \r\n                        mayor control sobre la propagación del virus, sino que ha participado activamente \r\n                        en el diagnóstico, tratamiento. e investigación para poner fin a este brote lo \r\n                        antes posible.</p>\r\n                </Fieldset><br />\r\n                <Fieldset legend=\"Predicción de Datos con Python\" className=\"p-shadow-5\">\r\n                    <p>Entre los lenguajes de programación, Python es conocido como aquel que logra \r\n                        dominar todas las estadísticas, relacionadas con la minería de datos e incluso \r\n                        el aprendizaje automático, es software libre, por lo que muchas personas han \r\n                        podido usarlo para desarrollar sus soluciones dando un lugar que ha Bibliotecas \r\n                        muy interesantes donde se pueden encontrar casi todas las técnicas de machine \r\n                        learning que existen actualmente, por supuesto, tiene su parte negativa, y es \r\n                        que derivada del hecho de que muchas personas han aportado, tiene su sintaxis \r\n                        específica para cada caso, lo que hace aprendizaje un poco complejo.</p>\r\n                    <p>Actualmente existe una solución muy viable, ya que Scikit-learn consiste en \r\n                        ser una estandarización conformada en una librería de código abierto, que \r\n                        intenta unificar en un mismo contexto todos los algoritmos y funciones posibles, \r\n                        ayudando en gran medida las fases de preprocesamiento, entrenamiento, \r\n                        optimización y validación. de los diferentes métodos predictivos utilizados.</p>\r\n                    <p>Scikit-learn da la posibilidad de tener una gran cantidad de opciones de \r\n                        procesamiento de datos, de las cuales solo algunas serán utilizadas a lo \r\n                        largo de este informe, pero se recomienda poder buscar la documentación de esta \r\n                        herramienta que es muy útil para realizar este tipo. de predicciones como las que \r\n                        se encuentran a lo largo del documento. Un factor que hay que tener en cuenta \r\n                        respecto a la citada biblioteca es su alto nivel de madurez, con el que logra \r\n                        definir modelos predictivos que incluso se utilizan en producción, por lo que se \r\n                        toma como base para el desarrollo de las diferentes soluciones, encuentra se \r\n                        centrará en la metodología de regresión lineal.</p>\r\n                </Fieldset><br />\r\n                <Fieldset legend=\"Regresión Lineal\" className=\"p-shadow-5\">\r\n                    <p>Este modelo de predicción se basa en la posibilidad de calcular una línea recta que\r\n                         se acomode en la mayor medida posible a las diferentes muestras que se identifican\r\n                          dentro de la población que se toma para el análisis.  La forma de calcularlo se \r\n                          basa en que la regresión lineal se enfoca en definir los parámetros que se \r\n                          encuentran o caracterizan una función lineal, y = mx + b, de tal forma que los \r\n                          errores cuadráticos en la medición que se realizan, pueden ser eliminado hasta \r\n                          cierto punto. A la línea definida por la función descrita anteriormente, minimizando \r\n                          la distancia de cada médico a la línea, manualmente no es tan complejo, aunque el \r\n                          propósito de las diferentes soluciones que se presentan es realizar un modelo totalmente\r\n                           automatizado.</p>\r\n                    <p>Los diferentes datos que se manejan en el informe no solo se tratan de esta forma, \r\n                        además en algunos casos no se tienen en cuenta solo 2 dimensiones para extraer alguna \r\n                        información, pero cuando se trata de datos tridimensionales, muchas veces es preferible \r\n                        optar para un Gradiente Descendente, el cual itera para poder seguir el proceso anterior, \r\n                        de tal manera que se encuentre la línea que mejor se ajuste al contorno definido por las \r\n                        muestras seleccionadas, lo que le otorga un mayor dato computacional, se usa frecuentemente \r\n                        en multidimensional casos.</p>\r\n                </Fieldset><br />\r\n                <Fieldset legend=\"Medida de Error\" className=\"p-shadow-5\">\r\n                    <p>Como parte fundamental de los modelos con los que se definirá la información es que cuando \r\n                        existen problemas de esta naturaleza, ya sea machine learning o incluso ciencia de datos,\r\n                         en muy raras ocasiones son exactos, principalmente si se trata de la predicción del avance. \r\n                         de un virus patológico, ya que los resultados que se producen son probables, suelen ser \r\n                         estimaciones, esta razón da como resultado que siempre debe existir algún mecanismo que \r\n                         pueda evaluar la variación que existe y se da a lo largo de los cálculos realizados, claro \r\n                         está para saber los resultados que se están presentando como su precisión, y que estos \r\n                         puedan ser objetiva y cuantificablemente comparables, aplicando otros métodos adicionales \r\n                         que puedan sustentar en función de sus características hacia el comportamiento del conjunto de datos.</p>\r\n                </Fieldset><br />\r\n                <Fieldset legend=\"Descripción\" className=\"p-shadow-5\">\r\n                    <p>Esta aplicación tendrá como objetivo principal que un usuario pueda generar distintos análisis de \r\n                        información basados de un origen de datos (un archivo en Excel) y diferentes variables que se deberán \r\n                        configurar dentro del sistema según sea el ánalisis a realizar.  La aplicación deberá ser capaz \r\n                        de poder analizar y predecir lo siguiente:</p>\r\n                    <p>● Tendencia de la infección por Covid-19 en un País.</p>\r\n                    <p>● Predicción de Infectados en un País.</p>\r\n                    <p>● Indice de Progresión de la pandemia.</p>                \r\n                    <p>● Predicción de mortalidad por COVID en un Departamento.</p>\r\n                    <p>● Predicción de mortalidad por COVID en un País.</p>\r\n                    <p>● Análisis del número de muertes por coronavirus en un País.</p>\r\n                    <p>● Tendencia del número de infectados por día de un País.</p>\r\n                    <p>● Predicción de casos de un país para un año.</p>\r\n                    <p>● Tendencia de la vacunación de un País.</p>\r\n                    <p>● Ánalisis Comparativo de Vacunaciópn entre 2 paises.</p>\r\n                    <p>● Porcentaje de hombres infectados por covid-19 en un País desde el primer caso activo</p>\r\n                    <p>● Ánalisis Comparativo entres 2 o más paises o continentes.</p>\r\n                    <p>● Muertes promedio por casos confirmados y edad de covid 19 en un País.</p>\r\n                    <p>● Muertes según regiones de un país - Covid 19.</p>\r\n                    <p>● Tendencia de casos confirmados de Coronavirus en un departamento de un País.</p>\r\n                    <p>● Porcentaje de muertes frente al total de casos en un país, región o continente.</p>\r\n                    <p>● Tasa de comportamiento de casos activos en relación al número de muertes en un continente.</p>\r\n                    <p>● Comportamiento y clasificación de personas infectadas por COVID-19 por municipio en un País.</p>\r\n                    <p>● Predicción de muertes en el último día del primer año de infecciones en un país.</p>\r\n                    <p>● Tasa de crecimiento de casos de COVID-19 en relación con nuevos casos diarios y tasa de muerte por COVID-19.</p>\r\n                    <p>● Predicciones de casos y muertes en todo el mundo - Neural Network MLPRegressor</p>\r\n                    <p>● Tasa de mortalidad por coronavirus (COVID-19) en un país.</p>\r\n                    <p>● Factores de muerte por COVID-19 en un país.</p>\r\n                    <p>● Comparación entre el número de casos detectados y el número de pruebas de un país.</p>\r\n                    <p>● Predicción de casos confirmados por día</p>\r\n                </Fieldset><br />\r\n                <Fieldset legend=\"Datos del Estudiante\" className=\"p-shadow-5\">\r\n                    <div className=\"p-col-12 p-md-4\">\r\n                        <div className=\"p-inputgroup\">\r\n                            <span className=\"p-inputgroup-addon\">Nombre</span>\r\n                            <InputText value=\"José Andres Rodas Arrecis\"/>\r\n                            <span className=\"p-inputgroup-addon\"><i className=\"pi pi-user\"></i></span>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"p-col-12 p-md-4\">\r\n                            <div className=\"p-inputgroup\">\r\n                                <span className=\"p-inputgroup-addon\">Carnet</span>\r\n                                <InputText value=\"2015 04220\" />\r\n                                <span className=\"p-inputgroup-addon\"><i className=\"pi pi-wallet\"></i></span>\r\n                            </div>\r\n                        </div>\r\n                </Fieldset><br />\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Home","export const URL = \"http://127.0.0.1:5000\";","import {URL} from '../config/API'\r\n\r\nexport class DataService {\r\n    \r\n    async Report_1(file, x, y, z, pred, pais, ext){\r\n        try {\r\n            const formData = new FormData()\r\n            formData.append('myFile', file)\r\n            const res = await fetch(`${URL}/report1/${x}/${y}/${z}/${pred}/${pais}/${ext}`, {\r\n                method: 'POST',\r\n                body: formData\r\n            })\r\n            return await res.json()\r\n        } catch (error) {\r\n            return null\r\n        }\r\n\r\n    }\r\n\r\n    async Report_2(file, x, y, z, pred, pais, ext){\r\n        try {\r\n            const formData = new FormData()\r\n            formData.append('myFile', file)\r\n            const res = await fetch(`${URL}/report2/${x}/${y}/${z}/${pred}/${pais}/${ext}`, {\r\n                method: 'POST',\r\n                // headers: {\r\n                //     'Content-Type': 'multipart/form-data'\r\n                // },\r\n                body: formData\r\n            })\r\n            return await res.json()\r\n        } catch (error) {\r\n            return null\r\n        }\r\n    }\r\n\r\n    async Report_3(file, x, y, ext){\r\n        try {\r\n            const formData = new FormData()\r\n            formData.append('myFile', file)\r\n            const res = await fetch(`${URL}/report3/${x}/${y}/${ext}`, {\r\n                method: 'POST',\r\n                body: formData\r\n            })\r\n            return await res.json()\r\n        } catch (error) {\r\n            return null\r\n        }\r\n\r\n    }\r\n\r\n    async Report_4(file, x, y, z, pred, depto, ext){\r\n        try {\r\n            const formData = new FormData()\r\n            formData.append('myFile', file)\r\n            const res = await fetch(`${URL}/report4/${x}/${y}/${z}/${pred}/${depto}/${ext}`, {\r\n                method: 'POST',\r\n                body: formData\r\n            })\r\n            return await res.json()\r\n        } catch (error) {\r\n            return null\r\n        }\r\n    }\r\n\r\n    async Report_8(file, x, y, z, pred, depto, ext){\r\n        try {\r\n            const formData = new FormData()\r\n            formData.append('myFile', file)\r\n            const res = await fetch(`${URL}/report8/${x}/${y}/${z}/${pred}/${depto}/${ext}`, {\r\n                method: 'POST',\r\n                body: formData\r\n            })\r\n            return await res.json()\r\n        } catch (error) {\r\n            return null\r\n        }\r\n    }\r\n\r\n\r\n    async Report_9(file, x, y, z, pais, ext){\r\n        try {\r\n            const formData = new FormData()\r\n            formData.append('myFile', file)\r\n            const res = await fetch(`${URL}/report9/${x}/${y}/${z}/${pais}/${ext}`, {\r\n                method: 'POST',\r\n                body: formData\r\n            })\r\n            return await res.json()\r\n        } catch (error) {\r\n            return null\r\n        }\r\n    }\r\n\r\n\r\n}","import React from \"react\";\r\n\r\n//prime\r\nimport { FileUpload } from 'primereact/fileupload';\r\nimport { Card } from 'primereact/card';\r\n\r\n//services\r\nimport { DataService } from '../services/DataService'\r\n\r\nclass Data extends React.Component {\r\n\r\n    dataService = new DataService()\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {}\r\n    }\r\n\r\n    myUploader = (file) => {\r\n        // var name = file.files[0].name.split('.')\r\n        // var ext = name[name.length-1]\r\n        this.props.callback(file.files[0])\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"p-grid p-justify-center\"> \r\n                <Card title=\"Selecciona la Fuente de Datos\" subTitle=\"(.csv, .xls, .xlsx y .json)\"  className=\"p-my-6 p-shadow-5\">\r\n                    <FileUpload name=\"demo\"  customUpload uploadHandler={this.myUploader} className=\"p-mx-6\"/>\r\n                </Card> \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Data","import React from \"react\";\r\n\r\n//prime\r\nimport { Dropdown } from 'primereact/dropdown';\r\nimport { Card } from 'primereact/card';\r\nimport { InputText } from 'primereact/inputtext';\r\nimport { Button } from 'primereact/button';\r\n\r\n//services\r\nimport { DataService } from '../services/DataService'\r\n\r\nclass Variables extends React.Component {\r\n\r\n    dataService = new DataService()\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            predict: 0,\r\n            x: '',\r\n            x_name: '',\r\n            y: '',\r\n            y_name: '',\r\n            z: '',\r\n            z_name: '',\r\n            pais: '',\r\n            pred: '2022-10-11',\r\n            depto: ''\r\n        }\r\n     \r\n        this.predictions = [\r\n            {label: 'Tendencia de la infección por Covid-19 en un País.', value: 1},\r\n            {label: 'Predicción de Infectados en un País.', value: 2},\r\n            {label: 'Indice de Progresión de la pandemia.', value: 3},\r\n            {label: 'Predicción de mortalidad por COVID en un Departamento.', value: 4},\r\n            {label: 'Predicción de mortalidad por COVID en un País.', value: 5},\r\n            {label: 'Análisis del número de muertes por coronavirus en un País.', value: 6},\r\n            {label: 'Tendencia del número de infectados por día de un País.', value: 7},\r\n            {label: 'Predicción de casos de un país para un año.', value: 8},\r\n            {label: 'Tendencia de la vacunación de en un País.', value: 9},\r\n            {label: 'Ánalisis Comparativo de Vacunaciópn entre 2 paises.', value: 10},\r\n            {label: 'Porcentaje de hombres infectados por covid-19 en un País desde el primer caso activo', value: 11},\r\n            {label: 'Ánalisis Comparativo entres 2 o más paises o continentes.', value: 12},\r\n            {label: 'Muertes promedio por casos confirmados y edad de covid 19 en un País.', value: 13},\r\n            {label: 'Muertes según regiones de un país - Covid 19.', value: 14},\r\n            {label: 'Tendencia de casos confirmados de Coronavirus en un departamento de un País.', value: 15},\r\n            {label: 'Porcentaje de muertes frente al total de casos en un país, región o continente.', value: 16},\r\n            {label: 'Tasa de comportamiento de casos activos en relación al número de muertes en un continente.', value: 17},\r\n            {label: 'Comportamiento y clasificación de personas infectadas por COVID-19 por municipio en un País.', value: 18},\r\n            {label: 'Predicción de muertes en el último día del primer año de infecciones en un país.', value: 19},\r\n            {label: 'Tasa de crecimiento de casos de COVID-19 en relación con nuevos casos diarios y tasa de muerte por COVID-19.', value: 20},\r\n            {label: 'Predicciones de casos y muertes en todo el mundo - Neural Network MLPRegressor.', value: 21},\r\n            {label: 'Tasa de mortalidad por coronavirus (COVID-19) en un país.', value: 22},\r\n            {label: 'Factores de muerte por COVID-19 en un país.', value: 23},\r\n            {label: 'Comparación entre el número de casos detectados y el número de pruebas de un país.', value: 24},\r\n            {label: 'Predicción de casos confirmados por día.', value: 25}\r\n        ]\r\n    }\r\n\r\n    onPredictChange = (e) =>{\r\n        this.setState({predict: e.value})\r\n    }\r\n\r\n    Rep1 = async () =>{\r\n        if(this.props.data === null){\r\n            alert(\"ERROR: No se ha cargado una fuente de datos o es incorrecta...\")\r\n            return\r\n        }\r\n        var name = this.props.data.name.split('.')\r\n        var ext = name[name.length-1]\r\n        const response = await this.dataService.Report_1(this.props.data, this.state.x, this.state.y, this.state.z, this.state.pred, this.state.pais, ext)\r\n        if( response === null) {\r\n            alert(\"ERROR: Las variables ingresadas son incorrectas...\")\r\n            return\r\n        }\r\n        const names = {\r\n            download_title: 'Reporte1',\r\n            title: 'Tendencia de la infección por Covid-19 en '+this.state.pais,\r\n            x_name: this.state.x_name,\r\n            y_name: this.state.y_name,\r\n            predict_quest: this.state.pred,\r\n            text: {\r\n                title: 'Tendencia de la infección por Covid-19 en '+this.state.pais,\r\n                resumen: 'Cada país reporta los datos de forma ligeramente distinta y de forma inevitable no incluye las muertes y contagios que no han sido diagnosticados. En este reporte nos enfocamos en las tendencias dentro del pais ('+this.state.pais+') indicado en el área de parametrizacion, a medida que estos tratan de contener la propagación del virus, independientemente de si se están acercando o ya pasaron el pico de contagios, o si están experimentando un resurgir de contagios o muertes.  Para este calculo se toma como eje x los casos totales de covid del pais y como eje y los casos nuevos',\r\n                text1: 'Tipo de Regresión:\\n\\nPara este tipo de reporte se implementó una regresión polinomial, debido al tipo de datos que podrian venir incluidos en el archivo de datos.  En este caso los valores no crecen o decrecen de la misma manera, por ende una regresión linean no hubiera sido de gran ayuda para este cálculo.\\n\\nTendencia:\\n\\nLa tendencia del gráfico anterior se define principalmente por su pendiente, que es la tasa de cambio de las infecciones de '+this.state.pais+' para este caso el valor es de '+response.pendiente+(response.pendiente > 0 ? ', de esta manera notamos que la pendiente es positiva, por lo que es posible que estemos frente a un nuevo pico de personas infectados' : ', de esta manera notamos que la pendiente es negativa, por lo que puede significar una reduccion en las personas infectadas de dicho país.'),\r\n                text2: 'Medida de Error:\\n\\nComo parte fundamental de los modelos con los que se definió la información es que incluso en la ciencia de datos, los datos mismos en muy raras ocasiones son exactos.  Para este modelo de regresion polinomial se registraron los siguientes coeficientes de error:\\n\\nRMSE: '+response.rmse+'\\nR^2: '+response.r2\r\n            }\r\n        }\r\n        const report = Object.assign(response, names)\r\n        this.props.callback(report)\r\n    }\r\n\r\n    Rep2 = async () => {\r\n        if(this.props.data === null){\r\n            alert(\"ERROR: No se ha cargado una fuente de datos o es incorrecta...\")\r\n            return\r\n        }\r\n        var name = this.props.data.name.split('.')\r\n        var ext = name[name.length-1]\r\n        const response = await this.dataService.Report_2(this.props.data, this.state.x, this.state.y, this.state.z, this.state.pred, this.state.pais, ext)\r\n        if( response === null) {\r\n            alert(\"ERROR: Las variables ingresadas son incorrectas...\")\r\n            return\r\n        }\r\n        const names = {\r\n            download_title: 'Reporte2',\r\n            title: 'Predicción de Infectados en '+this.state.pais,\r\n            x_name: this.state.x_name,\r\n            y_name: this.state.y_name,\r\n            predict_quest: this.state.pred,\r\n            text: {\r\n                title: 'Predicción de Infectados en '+this.state.pais,\r\n                resumen: 'Para la prediccion de infectados de determinado pais se tomó en cuenta una variable que represente el Dia y otra que represente los casos totales de Covid-19 que han habido hasta la fecha en dicho pais.  Generalmente se reportan los datos de forma ligeramente distinta y de forma inevitable no incluye las muertes y contagios que no han sido diagnosticados.  Es bien sabido que la propagación de la enfermedad está influenciada por la gente, la voluntad de adoptar conductas preventivas de salud pública que a menudo se asocian con la percepción pública del riesgo.',\r\n                text1: 'Tipo de Regresión:\\n\\nPara este tipo de reporte se implementó una regresión lineal, debido al tipo de datos que podrian venir incluidos en el archivo de datos.  Los valores que se esperan encontrar en el archivo de entrada crecen o decrecen de la misma manera en una forma lineal, por ende una regresión linean se acopla de buena manera al modelo y al calculo de las variables.\\n\\nTendencia:\\n\\nLa tendencia del gráfico anterior se define principalmente por su pendiente, que es la tasa de cambio de las personas infectadas en '+this.state.pais+', para este caso el valor es de '+response.pendiente+(response.pendiente > 0 ? ', de esta manera notamos que la pendiente es positiva, por lo que es posible que estemos frente a un nuevo pico de personas infectados' : ', de esta manera notamos que la pendiente es negativa, por lo que puede significar una reduccion en las personas infectadas de dicho país.'),\r\n                text2: 'Dato de Predicción:\\n\\nLa sección de parametrización de variables incluye una casilla en donde se ingresa un valor a predecir por la tendencia de las infecciones por Covid-19 en dicho país.  Esta variable toma el lugar del eje x o variable independiente y mediante la regresión predice cierto valor en y o variable dependiente.  Para este caso, la prediccion para '+this.state.pred+' es de: '+response.predict_val+'.  Si no se ingresó ningun valor para predecir, el valor por defecto es 2022-10-11.\\n\\nMedida de Error:\\n\\nComo parte fundamental del modelo de regresión lineal con el que se definió la información es que incluso en la ciencia de datos, los datos mismos en muy raras ocasiones son exactos.  Para este modelo de regresion lineal se registraron los siguientes coeficientes de error:\\n\\nError: '+response.error+'\\n\\nRMSE: '+response.rmse+'\\nR^2: '+response.r2\r\n            }\r\n        }\r\n        const report = Object.assign(response, names)\r\n        this.props.callback(report)\r\n    }\r\n\r\n    Rep3 = async () => {\r\n        if(this.props.data === null){\r\n            alert(\"ERROR: No se ha cargado una fuente de datos o es incorrecta...\")\r\n            return\r\n        }\r\n        var name = this.props.data.name.split('.')\r\n        var ext = name[name.length-1]\r\n        const response = await this.dataService.Report_3(this.props.data, this.state.x, this.state.y, ext)\r\n        if( response === null) {\r\n            alert(\"ERROR: Las variables ingresadas son incorrectas...\")\r\n            return\r\n        }\r\n        const names = {\r\n            download_title: 'Reporte3',\r\n            title: 'Indice de Progresión de la Pandemia',\r\n            x_name: this.state.x_name,\r\n            y_name: this.state.y_name,\r\n            text: {\r\n                title: 'Indice de Progresión de la Pandemia',\r\n                resumen: 'La pandemia generada por la COVID-19 progresa diferente cuando llega a cada territorio, se comparó la progresión de casos de Coronavirus en la primera semana de la pandemia en cada país de la fuente de datos. Se realizó un estudio descriptivo, con la información de los casos confirmados en cada país, esto desde que se anunciara el primer caso en cada territorio.',\r\n                text1: 'Indice de Progresion (m):\\n\\nLa tendencia y el indice de progresión de la pandemia a travez de los diferentes paises del mundo está definido por la tasa de crecimiento, o sea la pendiente de la regresion lineal en este caso.  Para el calculo de los datos actuales la pendiente es de: '+response.pendiente+(response.pendiente > 0 ? ', de esta manera notamos que la pendiente es positiva, por lo que el indice de progresion podemos decir que es de crecimiento en los casos de covid 19 en todo el mundo.\\n\\n\\nM = (Y2-Y1)/(X2-X1)' : ', de esta manera notamos que la pendiente es negativa, por lo que podemos predecir que el indice de progresion de la pandemia disminuye, hay disminucion de casos en los paises del mundo, auque puede deberse porque no se sabe a ciencia cierta los casos que no son documentados y reportados.\\n\\n\\nM = (Y2-Y1)/(X2-X1)'),\r\n                text2: 'Tipo de Regresión:\\n\\nPara este tipo de reporte se implementó una regresión lineal, debido al tipo de datos que podrian venir incluidos en el archivo de datos.  Los valores que se esperan encontrar en el archivo de entrada crecen o decrecen de la misma manera en una forma lineal, por ende una regresión linean se acopla de buena manera al modelo y al calculo de las variables.\\n\\nMedida de Error:\\n\\nComo parte fundamental del modelo de regresión lineal con el que se definió la información es que incluso en la ciencia de datos, los datos mismos en muy raras ocasiones son exactos.  Para este modelo de regresion lineal se registraron los siguientes coeficientes de error:\\n\\nError: '+response.error+'\\n\\nRMSE: '+response.rmse+'\\nR^2: '+response.r2\r\n            }\r\n        }\r\n        const report = Object.assign(response, names)\r\n        this.props.callback(report)\r\n\r\n    }\r\n\r\n    Rep4 = async () => {\r\n        if(this.props.data === null){\r\n            alert(\"ERROR: No se ha cargado una fuente de datos o es incorrecta...\")\r\n            return\r\n        }\r\n        var name = this.props.data.name.split('.')\r\n        var ext = name[name.length-1]\r\n        const response = await this.dataService.Report_4(this.props.data, this.state.x, this.state.y, this.state.z, this.state.pred, this.state.depto, ext)\r\n        if( response === null) {\r\n            alert(\"ERROR: Las variables ingresadas son incorrectas...\")\r\n            return\r\n        }\r\n        const names = {\r\n            download_title: 'Reporte4',\r\n            title: 'Predicción de mortalidad por COVID en el Departamento de '+this.state.depto,\r\n            x_name: this.state.x_name,\r\n            y_name: this.state.y_name,\r\n            predict_quest: this.state.pred,\r\n            text: {\r\n                title: 'Predicción de mortalidad por COVID en el Departamento de'+this.state.depto,\r\n                resumen: 'Cuando hablamos del número de muertes causada por la COVID-19, solemos referirnos a la tasa de letalidad, es decir, la probabilidad que tenemos de morir una vez que te contagias.  Con estos datos llegó a una mediana de tasa de letalidad del 0,23%. Esto significa que había un 50% de estudios por debajo de 0,23 % y un 50% de estudios por encima de esa cifra.',\r\n                text1: 'Tipo de Regresión:\\n\\nPara este tipo de reporte se implementó una regresión polinomial, debido al tipo de datos que podrian venir incluidos en el archivo de datos no siempre son proporcionales entre sí.  Los valores que se esperan encontrar en el archivo de entrada no crecen o decrecen de la misma manera, por ende una regresión polinomial se acopla de buena manera al modelo y al calculo de las variables.\\n\\nTendencia:\\n\\nLa tendencia del gráfico anterior se define principalmente por su pendiente, que es la tasa de cambio de las personas fallecidas en '+this.state.depto+', para este caso el valor es de '+response.pendiente+(response.pendiente > 0 ? ', de esta manera notamos que la pendiente es positiva, por lo que es posible que estemos frente a un nuevo pico de personas fallecidas por covid-19.' : ', de esta manera notamos que la pendiente es negativa, por lo que puede significar una reduccion en las personas fallecidas por covid-19.'),\r\n                text2: 'Dato de Predicción:\\n\\nSe busca predecir la cantidad de muertos por covid-19 en el departamento de '+this.state.depto+' para la fecha: '+this.state.pred+' y el valor predecido de contagio es: '+response.predict_val+'.  Anteriormente definimos la probabilidad de muerte por contagio por covid-19 asi que realizando el calculo tenemos que: '+parseInt(response.predict_val)+' * 0.23 = '+parseInt(response.predict_val)*0.23+' por lo que esa es la estimacion de fallecimientos para la fecha solicitada.\\n\\nMedida de Error:\\n\\nComo parte fundamental del modelo de regresión polinomial con el que se definió la información es que incluso en la ciencia de datos, los datos mismos en muy raras ocasiones son exactos.  Para este modelo de regresion polinomial se registraron los siguientes coeficientes de error:\\n\\nRMSE: '+response.rmse+'\\nR^2: '+response.r2\r\n            }\r\n        }\r\n        const report = Object.assign(response, names)\r\n        this.props.callback(report)\r\n    }\r\n\r\n    Rep5 = async () => {\r\n        if(this.props.data === null){\r\n            alert(\"ERROR: No se ha cargado una fuente de datos o es incorrecta...\")\r\n            return\r\n        }\r\n        var name = this.props.data.name.split('.')\r\n        var ext = name[name.length-1]\r\n        const response = await this.dataService.Report_4(this.props.data, this.state.x, this.state.y, this.state.z, this.state.pred, this.state.pais, ext)\r\n        if( response === null) {\r\n            alert(\"ERROR: Las variables ingresadas son incorrectas...\")\r\n            return\r\n        }\r\n        const names = {\r\n            download_title: 'Reporte5',\r\n            title: 'Predicción de mortalidad por COVID en el Pais de '+this.state.pais,\r\n            x_name: this.state.x_name,\r\n            y_name: this.state.y_name,\r\n            predict_quest: this.state.pred,\r\n            text: {\r\n                title: 'Predicción de mortalidad por COVID en el Pais de'+this.state.pais,\r\n                resumen: 'Cuando hablamos del número de muertes causada por la COVID-19, solemos referirnos a la tasa de letalidad, es decir, la probabilidad que tenemos de morir una vez que te contagias.  Con estos datos llegó a una mediana de tasa de letalidad del 0,23%. Esto significa que había un 50% de estudios por debajo de 0,23 % y un 50% de estudios por encima de esa cifra.',\r\n                text1: 'Tipo de Regresión:\\n\\nPara este tipo de reporte se implementó una regresión polinomial, debido al tipo de datos que podrian venir incluidos en el archivo de datos no siempre son proporcionales entre sí.  Los valores que se esperan encontrar en el archivo de entrada no crecen o decrecen de la misma manera, por ende una regresión polinomial se acopla de buena manera al modelo y al calculo de las variables.\\n\\nTendencia:\\n\\nLa tendencia del gráfico anterior se define principalmente por su pendiente, que es la tasa de cambio de las personas fallecidas en '+this.state.depto+', para este caso el valor es de '+response.pendiente+(response.pendiente > 0 ? ', de esta manera notamos que la pendiente es positiva, por lo que es posible que estemos frente a un nuevo pico de personas fallecidas por covid-19.' : ', de esta manera notamos que la pendiente es negativa, por lo que puede significar una reduccion en las personas fallecidas por covid-19.'),\r\n                text2: 'Dato de Predicción:\\n\\nSe busca predecir la cantidad de muertos por covid-19 en el Pais de '+this.state.pais+' para la fecha: '+this.state.pred+' y el valor predecido de fallecimientos es de: '+response.predict_val+'.\\n\\nMedida de Error:\\n\\nComo parte fundamental del modelo de regresión polinomial con el que se definió la información es que incluso en la ciencia de datos, los datos mismos en muy raras ocasiones son exactos.  Para este modelo de regresion polinomial se registraron los siguientes coeficientes de error:\\n\\nRMSE: '+response.rmse+'\\nR^2: '+response.r2\r\n            }\r\n        }\r\n        const report = Object.assign(response, names)\r\n        this.props.callback(report)\r\n    }\r\n\r\n    Rep6 = async () => {\r\n        if(this.props.data === null){\r\n            alert(\"ERROR: No se ha cargado una fuente de datos o es incorrecta...\")\r\n            return\r\n        }\r\n        var name = this.props.data.name.split('.')\r\n        var ext = name[name.length-1]\r\n        const response = await this.dataService.Report_4(this.props.data, this.state.x, this.state.y, this.state.z, this.state.pred, this.state.pais, ext)\r\n        if( response === null) {\r\n            alert(\"ERROR: Las variables ingresadas son incorrectas...\")\r\n            return\r\n        }\r\n        const names = {\r\n            download_title: 'Reporte6',\r\n            title: 'Análisis del número de muertes por coronavirus en el Pais de '+this.state.pais,\r\n            x_name: this.state.x_name,\r\n            y_name: this.state.y_name,\r\n            predict_quest: this.state.pred,\r\n            text: {\r\n                title: 'Análisis del número de muertes por coronavirus en el Pais de '+this.state.pais,\r\n                resumen: 'Hasta la fecha actual (inicios de 2022) las victimas fatales de covid-19 casi alcanzan los 300 millones de personas, y este numero sigue aumentando aunque no al mismo ritmo que antes.  La cantidad de pruebas con resultado positivo se estima multiplicando las pruebas realizadas por el porcentaje de resultados positivos. Es posible que la cantidad de pruebas con resultado positivo no sea igual a la cantidad de casos positivos debido a diferencias en los informes y a personas que se someten a más de una prueba.',\r\n                text1: 'Tipo de Regresión:\\n\\nPara este tipo de reporte se implementó una regresión polinomial, debido al tipo de datos que podrian venir incluidos en el archivo de datos no siempre son proporcionales entre sí.  Los valores que se esperan encontrar como el numero de muertes por dia, no crecen o decrecen de la misma manera, puede que un dia mueran menos personas que el dia anterior, etc.  Por ende una regresión polinomial se acopla de buena manera al modelo y al calculo de las variables.\\n\\nTendencia:\\n\\nLa tendencia del gráfico anterior se define principalmente por su pendiente, que es la tasa de cambio de las personas fallecidas en '+this.state.depto+', para este caso el valor es de '+response.pendiente+(response.pendiente > 0 ? ', de esta manera notamos que la pendiente es positiva, por lo que es posible que estemos frente a un nuevo pico de personas fallecidas por covid-19.' : ', de esta manera notamos que la pendiente es negativa, por lo que puede significar una reduccion en las personas fallecidas por covid-19.'),\r\n                text2: 'Medida de Error:\\n\\nComo parte fundamental del modelo de regresión polinomial con el que se definió la información es que incluso en la ciencia de datos, los datos mismos en muy raras ocasiones son exactos.  Para este modelo de regresion polinomial se registraron los siguientes coeficientes de error:\\n\\nRMSE: '+response.rmse+'\\nR^2: '+response.r2\r\n            }\r\n        }\r\n        const report = Object.assign(response, names)\r\n        this.props.callback(report)\r\n    }\r\n\r\n    Rep8 = async () => {\r\n        if(this.props.data === null){\r\n            alert(\"ERROR: No se ha cargado una fuente de datos o es incorrecta...\")\r\n            return\r\n        }\r\n        var name = this.props.data.name.split('.')\r\n        var ext = name[name.length-1]\r\n        const response = await this.dataService.Report_8(this.props.data, this.state.x, this.state.y, this.state.z, this.state.pred, this.state.pais, ext)\r\n        if( response === null) {\r\n            alert(\"ERROR: Las variables ingresadas son incorrectas...\")\r\n            return\r\n        }\r\n        const names = {\r\n            download_title: 'Reporte8',\r\n            title: 'Predicción de casos en '+this.state.pais+' para un año',\r\n            x_name: this.state.x_name,\r\n            y_name: this.state.y_name,\r\n            predict_quest: this.state.pred,\r\n            text: {\r\n                title: 'Predicción de casos en '+this.state.pais+' para un año',\r\n                resumen: 'Para la prediccion de infectados de determinado pais se tomó en cuenta una variable que represente el Dia y otra que represente los casos totales de Covid-19 que han habido hasta la fecha en dicho pais.  Generalmente se reportan los datos de forma ligeramente distinta y de forma inevitable no incluye las muertes y contagios que no han sido diagnosticados.  Es bien sabido que la propagación de la enfermedad está influenciada por la gente, la voluntad de adoptar conductas preventivas de salud pública que a menudo se asocian con la percepción pública del riesgo.',\r\n                text1: 'Tipo de Regresión:\\n\\nPara este tipo de reporte se implementó una regresión polinomial, debido al tipo de datos que podrian venir incluidos en el archivo de datos no siempre son proporcionales entre sí.  Los valores que se esperan encontrar como el numero de muertes por dia, no crecen o decrecen de la misma manera, puede que un dia mueran menos personas que el dia anterior, etc.  Por ende una regresión polinomial se acopla de buena manera al modelo y al calculo de las variables.\\n\\nTendencia:\\n\\nLa tendencia del gráfico anterior se define principalmente por su pendiente, que es la tasa de cambio de las personas fallecidas en '+this.state.depto+', para este caso el valor es de '+response.pendiente+(response.pendiente > 0 ? ', de esta manera notamos que la pendiente es positiva, por lo que es posible que estemos frente a un nuevo pico de personas fallecidas por covid-19.' : ', de esta manera notamos que la pendiente es negativa, por lo que puede significar una reduccion en las personas fallecidas por covid-19.'),\r\n                text2: 'Dato de Predicción:\\n\\nLa sección de parametrización de variables incluye una casilla en donde se ingresa un valor a predecir por la tendencia de las infecciones por Covid-19 en dicho país.  Esta variable toma el lugar del eje x o variable independiente y mediante la regresión predice cierto valor en y o variable dependiente.  Para este caso, la prediccion para '+this.state.pred+' es de: '+response.predict_val+'.  Si no se ingresó ningun valor para predecir, el valor por defecto es 2022-10-11.\\n\\nMedida de Error:\\n\\nComo parte fundamental del modelo de regresión polinomial con el que se definió la información es que incluso en la ciencia de datos, los datos mismos en muy raras ocasiones son exactos.  Para este modelo de regresion polinomial se registraron los siguientes coeficientes de error:\\n\\nRMSE: '+response.rmse+'\\nR^2: '+response.r2\r\n            }\r\n        }\r\n        const report = Object.assign(response, names)\r\n        this.props.callback(report)\r\n    }\r\n\r\n    Rep9 = async () => {\r\n        if(this.props.data === null){\r\n            alert(\"ERROR: No se ha cargado una fuente de datos o es incorrecta...\")\r\n            return\r\n        }\r\n        var name = this.props.data.name.split('.')\r\n        var ext = name[name.length-1]\r\n        const response = await this.dataService.Report_9(this.props.data, this.state.x, this.state.y, this.state.z, this.state.pais, ext)\r\n        if( response === null) {\r\n            alert(\"ERROR: Las variables ingresadas son incorrectas...\")\r\n            return\r\n        }\r\n        const names = {\r\n            download_title: 'Reporte9',\r\n            title: 'Tendencia de la vacunación en '+this.state.pais,\r\n            x_name: this.state.x_name,\r\n            y_name: this.state.y_name,\r\n            predict_quest: this.state.pred,\r\n            text: {\r\n                title: 'Tendencia de la vacunación en '+this.state.pais,\r\n                resumen: 'El cómputo mundial de dosis administradas se acerca a los 9.200 millones de inyecciones y la media de dosis diarias administradas gira en torno a los 30 millones diarios, aupada por las dosis de refuerzo en los países desarrollados, según los datos recogidos por Our World in Data sobre la vacunación en el mundo. La campaña avanza en alrededor de 200 territorios y países de todo el planeta, entre ellos '+this.state.pais, \r\n                text1: 'Tipo de Regresión:\\n\\nPara este tipo de reporte se implementó una regresión polinomial, debido al tipo de datos que podrian venir incluidos en el archivo de datos no siempre son proporcionales entre sí.  Los valores que se esperan encontrar como el numero de muertes por dia, no crecen o decrecen de la misma manera, puede que un dia mueran menos personas que el dia anterior, etc.  Por ende una regresión polinomial se acopla de buena manera al modelo y al calculo de las variables.\\n\\nTendencia:\\n\\nLa tendencia del gráfico anterior se define principalmente por su pendiente, que es la tasa de cambio de las personas fallecidas en '+this.state.depto+', para este caso el valor es de '+response.pendiente+(response.pendiente > 0 ? ', de esta manera notamos que la pendiente es positiva, por lo que es posible que estemos frente a un nuevo pico de personas fallecidas por covid-19.' : ', de esta manera notamos que la pendiente es negativa, por lo que puede significar una reduccion en las personas fallecidas por covid-19.'),\r\n                text2: 'Medida de Error:\\n\\nComo parte fundamental del modelo de regresión polinomial con el que se definió la información es que incluso en la ciencia de datos, los datos mismos en muy raras ocasiones son exactos.  Para este modelo de regresion polinomial se registraron los siguientes coeficientes de error:\\n\\nRMSE: '+response.rmse+'\\nR^2: '+response.r2\r\n            }\r\n        }\r\n        const report = Object.assign(response, names)\r\n        console.log(report)\r\n        this.props.callback(report)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"p-grid p-justify-center\"> \r\n                <Card title=\"Parametrización de Variables\" className=\"p-my-6 p-shadow-5\">\r\n                    <div className=\"p-mt-4 p-mb-6\">\r\n                        <label>Predicción a realizar:</label>\r\n                        <Dropdown className=\"p-ml-4\" value={this.state.predict} options={this.predictions} onChange={ this.onPredictChange } placeholder=\"Seleccione una predicción\"/><br></br> \r\n                    </div>\r\n                    \r\n                    {/*Variables Reporte 1*/}\r\n                    {this.state.predict === 1 ? (\r\n                        <div>\r\n                            <h4>Variable Independiente (Fecha):</h4>\r\n                            <div className=\"p-fluid p-formgrid p-grid\">\r\n                                <div className=\"p-field p-col\">\r\n                                    <label htmlFor=\"firstname2\">Nombre</label>\r\n                                    <InputText id=\"firstname2\" type=\"text\" value={this.state.x_name} onChange={(e) => this.setState({x_name: e.target.value})}/>\r\n                                </div>\r\n                                <div className=\"p-field p-col\">\r\n                                    <label htmlFor=\"lastname2\">Campo Archivo</label>\r\n                                    <InputText id=\"lastname2\" type=\"text\" value={this.state.x} onChange={(e) => this.setState({x: e.target.value})} />\r\n                                </div>\r\n                            </div>\r\n                            <h4>Variables Dependientes (Nuevos y Pais):</h4>\r\n                            <div className=\"p-fluid p-formgrid p-grid\">\r\n                                <div className=\"p-field p-col\">\r\n                                    <label htmlFor=\"firstname2\">Nombre</label>\r\n                                    <InputText id=\"firstname2\" type=\"text\" value={this.state.y_name} onChange={(e) => this.setState({y_name: e.target.value})}/>\r\n                                    \r\n                                </div>\r\n                                <div className=\"p-field p-col\">\r\n                                    <label htmlFor=\"lastname2\">Campo Archivo</label>\r\n                                    <InputText  id=\"lastname2\" type=\"text\" value={this.state.y} onChange={(e) => this.setState({ y: e.target.value })}/>\r\n                                    \r\n                                </div>\r\n                            </div>\r\n                            <div className=\"p-fluid p-formgrid p-grid\">\r\n                                <div className=\"p-field p-col\">\r\n                                    <label htmlFor=\"firstname2\">Nombre</label>\r\n                                    <InputText id=\"firstname2\" type=\"text\" value={this.state.z_name} onChange={(e) => this.setState({ z_name: e.target.value })}/>\r\n                                    \r\n                                </div>\r\n                                <div className=\"p-field p-col\">\r\n                                    <label htmlFor=\"lastname2\">Campo Archivo</label>\r\n                                    <InputText  id=\"lastname2\" type=\"text\" value={this.state.z} onChange={(e) => this.setState({ z: e.target.value })}/>\r\n                                    \r\n                                </div>\r\n                            </div>\r\n                            <h4>Parámetros:</h4>\r\n                            <div className=\"p-fluid p-formgrid p-grid\">\r\n                                <div className=\"p-field p-col\">\r\n                                    <label htmlFor=\"firstname2\">Pais</label>\r\n                                    <InputText id=\"firstname2\" type=\"text\" value={this.state.pais} onChange={(e) => this.setState({ pais: e.target.value })}/>\r\n                                    \r\n                                </div>\r\n                            </div>\r\n                            <Button label=\"Calcular\" icon=\"pi pi-check\" onClick={ this.Rep1 }/>\r\n                        </div>\r\n                    ) : null}\r\n\r\n                    {/*Variables Reporte 2*/}\r\n                    {this.state.predict === 2 ? (\r\n                        <div>\r\n                            <h4>Variable Independiente (Fecha):</h4>\r\n                            <div className=\"p-fluid p-formgrid p-grid\">\r\n                                <div className=\"p-field p-col\">\r\n                                    <label htmlFor=\"firstname2\">Nombre</label>\r\n                                    <InputText id=\"firstname2\" type=\"text\" value={this.state.x_name} onChange={(e) => this.setState({x_name: e.target.value})}/>\r\n                                </div>\r\n                                <div className=\"p-field p-col\">\r\n                                    <label htmlFor=\"lastname2\">Campo Archivo</label>\r\n                                    <InputText id=\"lastname2\" type=\"text\" value={this.state.x} onChange={(e) => this.setState({x: e.target.value})} />\r\n                                </div>\r\n                            </div>\r\n                            <h4>Variables Dependientes (Totales y Pais):</h4>\r\n                            <div className=\"p-fluid p-formgrid p-grid\">\r\n                                <div className=\"p-field p-col\">\r\n                                    <label htmlFor=\"firstname2\">Nombre</label>\r\n                                    <InputText id=\"firstname2\" type=\"text\" value={this.state.y_name} onChange={(e) => this.setState({y_name: e.target.value})}/>\r\n                                    \r\n                                </div>\r\n                                <div className=\"p-field p-col\">\r\n                                    <label htmlFor=\"lastname2\">Campo Archivo</label>\r\n                                    <InputText  id=\"lastname2\" type=\"text\" value={this.state.y} onChange={(e) => this.setState({ y: e.target.value })}/>\r\n                                    \r\n                                </div>\r\n                            </div>\r\n                            <div className=\"p-fluid p-formgrid p-grid\">\r\n                                <div className=\"p-field p-col\">\r\n                                    <label htmlFor=\"firstname2\">Nombre</label>\r\n                                    <InputText id=\"firstname2\" type=\"text\" value={this.state.z_name} onChange={(e) => this.setState({ z_name: e.target.value })}/>\r\n                                    \r\n                                </div>\r\n                                <div className=\"p-field p-col\">\r\n                                    <label htmlFor=\"lastname2\">Campo Archivo</label>\r\n                                    <InputText  id=\"lastname2\" type=\"text\" value={this.state.z} onChange={(e) => this.setState({ z: e.target.value })}/>\r\n                                    \r\n                                </div>\r\n                            </div>\r\n                            <h4>Parámetros:</h4>\r\n                            <div className=\"p-fluid p-formgrid p-grid\">\r\n                                <div className=\"p-field p-col\">\r\n                                    <label htmlFor=\"firstname2\">Pais</label>\r\n                                    <InputText id=\"firstname2\" type=\"text\" value={this.state.pais} onChange={(e) => this.setState({ pais: e.target.value })}/>\r\n                                    \r\n                                </div>\r\n                                <div className=\"p-field p-col\">\r\n                                    <label htmlFor=\"lastname2\">Fecha Predicción (yyyy-mm-dd)</label>\r\n                                    <InputText  id=\"lastname2\" type=\"text\" value={this.state.pred} onChange={(e) => this.setState({ pred: e.target.value })}/>\r\n                                    \r\n                                </div>\r\n                            </div>\r\n                            <Button label=\"Calcular\" icon=\"pi pi-check\" onClick={ this.Rep2 }/>\r\n                        </div>\r\n                    ) : null}\r\n\r\n\r\n                    {/*Variables Reporte 3*/}\r\n                    {this.state.predict === 3 ? (\r\n                        <div>\r\n                            <h4>Variable Independiente (Fecha):</h4>\r\n                            <div className=\"p-fluid p-formgrid p-grid\">\r\n                                <div className=\"p-field p-col\">\r\n                                    <label htmlFor=\"firstname2\">Nombre</label>\r\n                                    <InputText id=\"firstname2\" type=\"text\" value={this.state.x_name} onChange={(e) => this.setState({x_name: e.target.value})}/>\r\n                                </div>\r\n                                <div className=\"p-field p-col\">\r\n                                    <label htmlFor=\"lastname2\">Campo Archivo</label>\r\n                                    <InputText id=\"lastname2\" type=\"text\" value={this.state.x} onChange={(e) => this.setState({x: e.target.value})} />\r\n                                </div>\r\n                            </div>\r\n                            <h4>Variables Dependientes (Infectados y Pais):</h4>\r\n                            <div className=\"p-fluid p-formgrid p-grid\">\r\n                                <div className=\"p-field p-col\">\r\n                                    <label htmlFor=\"firstname2\">Nombre</label>\r\n                                    <InputText id=\"firstname2\" type=\"text\" value={this.state.y_name} onChange={(e) => this.setState({y_name: e.target.value})}/>\r\n                                    \r\n                                </div>\r\n                                <div className=\"p-field p-col\">\r\n                                    <label htmlFor=\"lastname2\">Campo Archivo</label>\r\n                                    <InputText  id=\"lastname2\" type=\"text\" value={this.state.y} onChange={(e) => this.setState({ y: e.target.value })}/>\r\n                                    \r\n                                </div>\r\n                            </div>                        \r\n                            <Button label=\"Calcular\" icon=\"pi pi-check\" onClick={ this.Rep3 }/>\r\n                        </div>\r\n                    ) : null}\r\n\r\n\r\n                    {/*Variables Reporte 4*/}\r\n                    {this.state.predict === 4 ? (\r\n                        <div>\r\n                            <h4>Variable Independiente (Fecha):</h4>\r\n                            <div className=\"p-fluid p-formgrid p-grid\">\r\n                                <div className=\"p-field p-col\">\r\n                                    <label htmlFor=\"firstname2\">Nombre</label>\r\n                                    <InputText id=\"firstname2\" type=\"text\" value={this.state.x_name} onChange={(e) => this.setState({x_name: e.target.value})}/>\r\n                                </div>\r\n                                <div className=\"p-field p-col\">\r\n                                    <label htmlFor=\"lastname2\">Campo Archivo</label>\r\n                                    <InputText id=\"lastname2\" type=\"text\" value={this.state.x} onChange={(e) => this.setState({x: e.target.value})} />\r\n                                </div>\r\n                            </div>\r\n                            <h4>Variables Dependientes (Casos y Departamento):</h4>\r\n                            <div className=\"p-fluid p-formgrid p-grid\">\r\n                                <div className=\"p-field p-col\">\r\n                                    <label htmlFor=\"firstname2\">Nombre</label>\r\n                                    <InputText id=\"firstname2\" type=\"text\" value={this.state.y_name} onChange={(e) => this.setState({y_name: e.target.value})}/>\r\n                                    \r\n                                </div>\r\n                                <div className=\"p-field p-col\">\r\n                                    <label htmlFor=\"lastname2\">Campo Archivo</label>\r\n                                    <InputText  id=\"lastname2\" type=\"text\" value={this.state.y} onChange={(e) => this.setState({ y: e.target.value })}/>\r\n                                    \r\n                                </div>\r\n                            </div>\r\n                            <div className=\"p-fluid p-formgrid p-grid\">\r\n                                <div className=\"p-field p-col\">\r\n                                    <label htmlFor=\"firstname2\">Nombre</label>\r\n                                    <InputText id=\"firstname2\" type=\"text\" value={this.state.z_name} onChange={(e) => this.setState({ z_name: e.target.value })}/>\r\n                                    \r\n                                </div>\r\n                                <div className=\"p-field p-col\">\r\n                                    <label htmlFor=\"lastname2\">Campo Archivo</label>\r\n                                    <InputText  id=\"lastname2\" type=\"text\" value={this.state.z} onChange={(e) => this.setState({ z: e.target.value })}/>\r\n                                    \r\n                                </div>\r\n                            </div>\r\n                            <h4>Parámetros:</h4>\r\n                            <div className=\"p-fluid p-formgrid p-grid\">\r\n                                <div className=\"p-field p-col\">\r\n                                    <label htmlFor=\"firstname2\">Departamento (filtro)</label>\r\n                                    <InputText id=\"firstname2\" type=\"text\" value={this.state.depto} onChange={(e) => this.setState({ depto: e.target.value })}/>\r\n                                    \r\n                                </div>\r\n                                <div className=\"p-field p-col\">\r\n                                    <label htmlFor=\"lastname2\">Fecha Predicción (yyyy-mm-dd)</label>\r\n                                    <InputText  id=\"lastname2\" type=\"text\" value={this.state.pred} onChange={(e) => this.setState({ pred: e.target.value })}/>\r\n                                    \r\n                                </div>\r\n                            </div>\r\n                            <Button label=\"Calcular\" icon=\"pi pi-check\" onClick={ this.Rep4 }/>\r\n                        </div>\r\n                    ) : null}\r\n\r\n\r\n                    {/*Variables Reporte 5*/}\r\n                    {this.state.predict === 5 ? (\r\n                        <div>\r\n                            <h4>Variable Independiente (Fecha):</h4>\r\n                            <div className=\"p-fluid p-formgrid p-grid\">\r\n                                <div className=\"p-field p-col\">\r\n                                    <label htmlFor=\"firstname2\">Nombre</label>\r\n                                    <InputText id=\"firstname2\" type=\"text\" value={this.state.x_name} onChange={(e) => this.setState({x_name: e.target.value})}/>\r\n                                </div>\r\n                                <div className=\"p-field p-col\">\r\n                                    <label htmlFor=\"lastname2\">Campo Archivo</label>\r\n                                    <InputText id=\"lastname2\" type=\"text\" value={this.state.x} onChange={(e) => this.setState({x: e.target.value})} />\r\n                                </div>\r\n                            </div>\r\n                            <h4>Variables Dependientes (Casos y Pais):</h4>\r\n                            <div className=\"p-fluid p-formgrid p-grid\">\r\n                                <div className=\"p-field p-col\">\r\n                                    <label htmlFor=\"firstname2\">Nombre</label>\r\n                                    <InputText id=\"firstname2\" type=\"text\" value={this.state.y_name} onChange={(e) => this.setState({y_name: e.target.value})}/>\r\n                                    \r\n                                </div>\r\n                                <div className=\"p-field p-col\">\r\n                                    <label htmlFor=\"lastname2\">Campo Archivo</label>\r\n                                    <InputText  id=\"lastname2\" type=\"text\" value={this.state.y} onChange={(e) => this.setState({ y: e.target.value })}/>\r\n                                    \r\n                                </div>\r\n                            </div>\r\n                            <div className=\"p-fluid p-formgrid p-grid\">\r\n                                <div className=\"p-field p-col\">\r\n                                    <label htmlFor=\"firstname2\">Nombre</label>\r\n                                    <InputText id=\"firstname2\" type=\"text\" value={this.state.z_name} onChange={(e) => this.setState({ z_name: e.target.value })}/>\r\n                                    \r\n                                </div>\r\n                                <div className=\"p-field p-col\">\r\n                                    <label htmlFor=\"lastname2\">Campo Archivo</label>\r\n                                    <InputText  id=\"lastname2\" type=\"text\" value={this.state.z} onChange={(e) => this.setState({ z: e.target.value })}/>\r\n                                    \r\n                                </div>\r\n                            </div>\r\n                            <h4>Parámetros:</h4>\r\n                            <div className=\"p-fluid p-formgrid p-grid\">\r\n                                <div className=\"p-field p-col\">\r\n                                    <label htmlFor=\"firstname2\">Pais (filtro)</label>\r\n                                    <InputText id=\"firstname2\" type=\"text\" value={this.state.pais} onChange={(e) => this.setState({ pais: e.target.value })}/>\r\n                                    \r\n                                </div>\r\n                                <div className=\"p-field p-col\">\r\n                                    <label htmlFor=\"lastname2\">Fecha Predicción (yyyy-mm-dd)</label>\r\n                                    <InputText  id=\"lastname2\" type=\"text\" value={this.state.pred} onChange={(e) => this.setState({ pred: e.target.value })}/>\r\n                                    \r\n                                </div>\r\n                            </div>\r\n                            <Button label=\"Calcular\" icon=\"pi pi-check\" onClick={ this.Rep5 }/>\r\n                        </div>\r\n                    ) : null}\r\n\r\n\r\n                    {/*Variables Reporte 6*/}\r\n                    {this.state.predict === 6 ? (\r\n                        <div>\r\n                            <h4>Variable Independiente (Fecha):</h4>\r\n                            <div className=\"p-fluid p-formgrid p-grid\">\r\n                                <div className=\"p-field p-col\">\r\n                                    <label htmlFor=\"firstname2\">Nombre</label>\r\n                                    <InputText id=\"firstname2\" type=\"text\" value={this.state.x_name} onChange={(e) => this.setState({x_name: e.target.value})}/>\r\n                                </div>\r\n                                <div className=\"p-field p-col\">\r\n                                    <label htmlFor=\"lastname2\">Campo Archivo</label>\r\n                                    <InputText id=\"lastname2\" type=\"text\" value={this.state.x} onChange={(e) => this.setState({x: e.target.value})} />\r\n                                </div>\r\n                            </div>\r\n                            <h4>Variables Dependientes (Casos y Pais):</h4>\r\n                            <div className=\"p-fluid p-formgrid p-grid\">\r\n                                <div className=\"p-field p-col\">\r\n                                    <label htmlFor=\"firstname2\">Nombre</label>\r\n                                    <InputText id=\"firstname2\" type=\"text\" value={this.state.y_name} onChange={(e) => this.setState({y_name: e.target.value})}/>\r\n                                    \r\n                                </div>\r\n                                <div className=\"p-field p-col\">\r\n                                    <label htmlFor=\"lastname2\">Campo Archivo</label>\r\n                                    <InputText  id=\"lastname2\" type=\"text\" value={this.state.y} onChange={(e) => this.setState({ y: e.target.value })}/>\r\n                                    \r\n                                </div>\r\n                            </div>\r\n                            <div className=\"p-fluid p-formgrid p-grid\">\r\n                                <div className=\"p-field p-col\">\r\n                                    <label htmlFor=\"firstname2\">Nombre</label>\r\n                                    <InputText id=\"firstname2\" type=\"text\" value={this.state.z_name} onChange={(e) => this.setState({ z_name: e.target.value })}/>\r\n                                    \r\n                                </div>\r\n                                <div className=\"p-field p-col\">\r\n                                    <label htmlFor=\"lastname2\">Campo Archivo</label>\r\n                                    <InputText  id=\"lastname2\" type=\"text\" value={this.state.z} onChange={(e) => this.setState({ z: e.target.value })}/>\r\n                                    \r\n                                </div>\r\n                            </div>\r\n                            <h4>Parámetros:</h4>\r\n                            <div className=\"p-fluid p-formgrid p-grid\">\r\n                                <div className=\"p-field p-col\">\r\n                                    <label htmlFor=\"firstname2\">Pais (filtro)</label>\r\n                                    <InputText id=\"firstname2\" type=\"text\" value={this.state.pais} onChange={(e) => this.setState({ pais: e.target.value })}/>\r\n                                    \r\n                                </div>\r\n                            </div>\r\n                            <Button label=\"Calcular\" icon=\"pi pi-check\" onClick={ this.Rep6 }/>\r\n                        </div>\r\n                    ) : null}\r\n\r\n\r\n                    {/*Variables Reporte 7*/}\r\n                    {this.state.predict === 7 ? (\r\n                        <div>\r\n                            <h4>Variable Independiente (Fecha):</h4>\r\n                            <div className=\"p-fluid p-formgrid p-grid\">\r\n                                <div className=\"p-field p-col\">\r\n                                    <label htmlFor=\"firstname2\">Nombre</label>\r\n                                    <InputText id=\"firstname2\" type=\"text\" value={this.state.x_name} onChange={(e) => this.setState({x_name: e.target.value})}/>\r\n                                </div>\r\n                                <div className=\"p-field p-col\">\r\n                                    <label htmlFor=\"lastname2\">Campo Archivo</label>\r\n                                    <InputText id=\"lastname2\" type=\"text\" value={this.state.x} onChange={(e) => this.setState({x: e.target.value})} />\r\n                                </div>\r\n                            </div>\r\n                            <h4>Variables Dependientes (Nuevos y Pais):</h4>\r\n                            <div className=\"p-fluid p-formgrid p-grid\">\r\n                                <div className=\"p-field p-col\">\r\n                                    <label htmlFor=\"firstname2\">Nombre</label>\r\n                                    <InputText id=\"firstname2\" type=\"text\" value={this.state.y_name} onChange={(e) => this.setState({y_name: e.target.value})}/>\r\n                                    \r\n                                </div>\r\n                                <div className=\"p-field p-col\">\r\n                                    <label htmlFor=\"lastname2\">Campo Archivo</label>\r\n                                    <InputText  id=\"lastname2\" type=\"text\" value={this.state.y} onChange={(e) => this.setState({ y: e.target.value })}/>\r\n                                    \r\n                                </div>\r\n                            </div>\r\n                            <div className=\"p-fluid p-formgrid p-grid\">\r\n                                <div className=\"p-field p-col\">\r\n                                    <label htmlFor=\"firstname2\">Nombre</label>\r\n                                    <InputText id=\"firstname2\" type=\"text\" value={this.state.z_name} onChange={(e) => this.setState({ z_name: e.target.value })}/>\r\n                                    \r\n                                </div>\r\n                                <div className=\"p-field p-col\">\r\n                                    <label htmlFor=\"lastname2\">Campo Archivo</label>\r\n                                    <InputText  id=\"lastname2\" type=\"text\" value={this.state.z} onChange={(e) => this.setState({ z: e.target.value })}/>\r\n                                    \r\n                                </div>\r\n                            </div>\r\n                            <h4>Parámetros:</h4>\r\n                            <div className=\"p-fluid p-formgrid p-grid\">\r\n                                <div className=\"p-field p-col\">\r\n                                    <label htmlFor=\"firstname2\">Pais</label>\r\n                                    <InputText id=\"firstname2\" type=\"text\" value={this.state.pais} onChange={(e) => this.setState({ pais: e.target.value })}/>\r\n                                    \r\n                                </div>\r\n                            </div>\r\n                            <Button label=\"Calcular\" icon=\"pi pi-check\" onClick={ this.Rep1 }/>\r\n                        </div>\r\n                    ) : null}\r\n\r\n\r\n                    {/*Variables Reporte 8*/}\r\n                    {this.state.predict === 8 ? (\r\n                        <div>\r\n                            <h4>Variable Independiente (Fecha):</h4>\r\n                            <div className=\"p-fluid p-formgrid p-grid\">\r\n                                <div className=\"p-field p-col\">\r\n                                    <label htmlFor=\"firstname2\">Nombre</label>\r\n                                    <InputText id=\"firstname2\" type=\"text\" value={this.state.x_name} onChange={(e) => this.setState({x_name: e.target.value})}/>\r\n                                </div>\r\n                                <div className=\"p-field p-col\">\r\n                                    <label htmlFor=\"lastname2\">Campo Archivo</label>\r\n                                    <InputText id=\"lastname2\" type=\"text\" value={this.state.x} onChange={(e) => this.setState({x: e.target.value})} />\r\n                                </div>\r\n                            </div>\r\n                            <h4>Variables Dependientes (Nuevos y Pais):</h4>\r\n                            <div className=\"p-fluid p-formgrid p-grid\">\r\n                                <div className=\"p-field p-col\">\r\n                                    <label htmlFor=\"firstname2\">Nombre</label>\r\n                                    <InputText id=\"firstname2\" type=\"text\" value={this.state.y_name} onChange={(e) => this.setState({y_name: e.target.value})}/>\r\n                                    \r\n                                </div>\r\n                                <div className=\"p-field p-col\">\r\n                                    <label htmlFor=\"lastname2\">Campo Archivo</label>\r\n                                    <InputText  id=\"lastname2\" type=\"text\" value={this.state.y} onChange={(e) => this.setState({ y: e.target.value })}/>\r\n                                    \r\n                                </div>\r\n                            </div>\r\n                            <div className=\"p-fluid p-formgrid p-grid\">\r\n                                <div className=\"p-field p-col\">\r\n                                    <label htmlFor=\"firstname2\">Nombre</label>\r\n                                    <InputText id=\"firstname2\" type=\"text\" value={this.state.z_name} onChange={(e) => this.setState({ z_name: e.target.value })}/>\r\n                                    \r\n                                </div>\r\n                                <div className=\"p-field p-col\">\r\n                                    <label htmlFor=\"lastname2\">Campo Archivo</label>\r\n                                    <InputText  id=\"lastname2\" type=\"text\" value={this.state.z} onChange={(e) => this.setState({ z: e.target.value })}/>\r\n                                    \r\n                                </div>\r\n                            </div>\r\n                            <h4>Parámetros:</h4>\r\n                            <div className=\"p-fluid p-formgrid p-grid\">\r\n                                <div className=\"p-field p-col\">\r\n                                    <label htmlFor=\"firstname2\">Pais</label>\r\n                                    <InputText id=\"firstname2\" type=\"text\" value={this.state.pais} onChange={(e) => this.setState({ pais: e.target.value })}/>\r\n                                </div>\r\n                                <div className=\"p-field p-col\">\r\n                                    <label htmlFor=\"lastname2\">Año Predicción</label>\r\n                                    <InputText  id=\"lastname2\" type=\"text\" value={this.state.pred} onChange={(e) => this.setState({ pred: e.target.value })}/>\r\n                                </div>\r\n                            </div>\r\n                            <Button label=\"Calcular\" icon=\"pi pi-check\" onClick={ this.Rep8 }/>\r\n                        </div>\r\n                    ) : null}\r\n\r\n\r\n                    {/*Variables Reporte 9*/}\r\n                    {this.state.predict === 9 ? (\r\n                        <div>\r\n                            <h4>Variable Independiente (Fecha):</h4>\r\n                            <div className=\"p-fluid p-formgrid p-grid\">\r\n                                <div className=\"p-field p-col\">\r\n                                    <label htmlFor=\"firstname2\">Nombre</label>\r\n                                    <InputText id=\"firstname2\" type=\"text\" value={this.state.x_name} onChange={(e) => this.setState({x_name: e.target.value})}/>\r\n                                </div>\r\n                                <div className=\"p-field p-col\">\r\n                                    <label htmlFor=\"lastname2\">Campo Archivo</label>\r\n                                    <InputText id=\"lastname2\" type=\"text\" value={this.state.x} onChange={(e) => this.setState({x: e.target.value})} />\r\n                                </div>\r\n                            </div>\r\n                            <h4>Variables Dependientes (Vacunados y Pais):</h4>\r\n                            <div className=\"p-fluid p-formgrid p-grid\">\r\n                                <div className=\"p-field p-col\">\r\n                                    <label htmlFor=\"firstname2\">Nombre</label>\r\n                                    <InputText id=\"firstname2\" type=\"text\" value={this.state.y_name} onChange={(e) => this.setState({y_name: e.target.value})}/>\r\n                                    \r\n                                </div>\r\n                                <div className=\"p-field p-col\">\r\n                                    <label htmlFor=\"lastname2\">Campo Archivo</label>\r\n                                    <InputText  id=\"lastname2\" type=\"text\" value={this.state.y} onChange={(e) => this.setState({ y: e.target.value })}/>\r\n                                    \r\n                                </div>\r\n                            </div>\r\n                            <div className=\"p-fluid p-formgrid p-grid\">\r\n                                <div className=\"p-field p-col\">\r\n                                    <label htmlFor=\"firstname2\">Nombre</label>\r\n                                    <InputText id=\"firstname2\" type=\"text\" value={this.state.z_name} onChange={(e) => this.setState({ z_name: e.target.value })}/>\r\n                                    \r\n                                </div>\r\n                                <div className=\"p-field p-col\">\r\n                                    <label htmlFor=\"lastname2\">Campo Archivo</label>\r\n                                    <InputText  id=\"lastname2\" type=\"text\" value={this.state.z} onChange={(e) => this.setState({ z: e.target.value })}/>\r\n                                    \r\n                                </div>\r\n                            </div>\r\n                            <h4>Parámetros:</h4>\r\n                            <div className=\"p-fluid p-formgrid p-grid\">\r\n                                <div className=\"p-field p-col\">\r\n                                    <label htmlFor=\"firstname2\">Pais</label>\r\n                                    <InputText id=\"firstname2\" type=\"text\" value={this.state.pais} onChange={(e) => this.setState({ pais: e.target.value })}/>\r\n                                    \r\n                                </div>\r\n                            </div>\r\n                            <Button label=\"Calcular\" icon=\"pi pi-check\" onClick={ this.Rep9 }/>\r\n                        </div>\r\n                    ) : null}\r\n\r\n\r\n\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Variables","import React from \"react\";\r\nimport { Document, Page, Text, View } from \"@react-pdf/renderer\";\r\n\r\nconst DocuPDF = ({ content }) => {\r\n  return (\r\n    <Document>\r\n      <Page\r\n        size=\"A4\"\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          backgroundColor: \"white\",\r\n        }}\r\n      >\r\n        <View\r\n          style={{\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            backgroundColor: \"white\",\r\n            padding: 10,\r\n          }}\r\n        >\r\n          <Text style={{ textAlign: \"center\", fontSize: \"25px\", marginTop: \"20px\" }}>\r\n            Reporte: {content.title + '\\n'}\r\n          </Text><br></br>\r\n          <Text \r\n            style={{\r\n              color: \"gray\",\r\n              fontStyle: \"Times New Roman\",\r\n              fontSize: \"10px\",\r\n              marginTop: \"10px\"\r\n            }}\r\n          >\r\n            José Andres, Rodas Arrecis, 201504220\r\n          </Text>\r\n          <Text \r\n            style={{\r\n              color: \"gray\",\r\n              fontStyle: \"Times New Roman\",\r\n              fontSize: \"10px\",\r\n            }}\r\n          >\r\n            Facultad de Ingeniería, Escuela de Ciencias y Sistemas, Universidad de San Carlos\r\n          </Text>\r\n          <Text \r\n            style={{\r\n              color: \"gray\",\r\n              fontStyle: \"Times New Roman\",\r\n              fontSize: \"10px\"\r\n            }}\r\n          >\r\n            Edificio T3, Ciudad Universitaria, Zona 12, Guatemala {'\\n'}\r\n          </Text>\r\n          <Text style={{ textAlign: \"justify\", color: \"black\", fontStyle: \"Times New Roman\", fontSize: \"15px\", marginTop: \"15px\", marginLeft:\"30px\", marginRight:\"30px\"}}>\r\n            {content.resumen}\r\n          </Text>\r\n          <View>\r\n            <Text style={{ color: \"black\", fontSize: \"15px\", position: \"absolute\", top: \"0px\", marginLeft:\"20px\", width: \"250px\", marginTop: \"15px\" }}>\r\n              {content.text1}\r\n            </Text>\r\n            \r\n            <Text style={{ color: \"#000000\", fontSize: \"15px\", marginLeft:\"300px\", marginRight: \"20px\", marginTop:\"15px\" }}>\r\n              {content.text2}\r\n            </Text>\r\n          </View>\r\n        </View>\r\n      </Page>\r\n    </Document>\r\n  );\r\n};\r\n\r\nexport default DocuPDF;\r\n","import React from \"react\";\r\n\r\n//prime\r\nimport { Chart } from 'primereact/chart';\r\nimport { Button } from 'primereact/button';\r\nimport { TabView, TabPanel } from 'primereact/tabview';\r\n//PDF\r\nimport { PDFDownloadLink, PDFViewer } from \"@react-pdf/renderer\";\r\nimport DocuPDF from '../DocuPDF'\r\n\r\nclass Graphics extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            data : {\r\n                labels: (this.props.report != null ? this.props.report.x : []),\r\n                datasets: [\r\n                  {\r\n                    label: 'Tendencia',\r\n                    data: (this.props.report != null ? this.props.report.predict_list : []),\r\n                    fill: false,\r\n                    borderColor: 'black',\r\n                          backgroundColor: 'blue'\r\n                  },\r\n                  { \r\n                    label: (this.props.report != null ? this.props.report.y_name : ''),\r\n                    data: (this.props.report != null ? this.props.report.y : []),\r\n                    fill: false,\r\n                    borderColor: 'white',\r\n                          backgroundColor: 'red',\r\n                          borderWidth: 0\r\n                  }\r\n                ]\r\n              },\r\n            title: 'Titulo del reporte de Coronavirus 2021',\r\n            text: 'Aqui tiene que estar todo el analisis y la conclusion del reporte generado de los datos de covid-19'\r\n        }\r\n\r\n    }\r\n      \r\n    options = {\r\n        title: {\r\n            display: true,\r\n            text: 'My Title',\r\n            fontSize: 16\r\n        },\r\n        legend: {\r\n            position: 'bottom'\r\n        }\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div className=\"p-grid p-justify-center\" >\r\n                <TabView className=\"p-col-8 p-my-6 p-shadow-5\">\r\n                    <TabPanel header=\"Gráfica\">\r\n                        <h1 className=\"p-grid p-justify-center p-mt-5 p-mb-6\">{(this.props.report != null ? this.props.report.title : '')}</h1>\r\n                        <h3>{(this.props.report != null ? this.props.report.y_name : '')}</h3>\r\n                        <Chart type='line' data={this.state.data} options={this.options}/>\r\n                        <h3 className=\"p-grid p-justify-end p-mt-3\">{(this.props.report != null ? this.props.report.x_name : '')}</h3>\r\n                    </TabPanel>\r\n                    <TabPanel header=\"Reporte\">\r\n                        <PDFViewer style={{ width: \"100%\", height: \"90vh\" }}>\r\n                            {(this.props.report != null ? <DocuPDF content={this.props.report.text} /> : null )}\r\n                        </PDFViewer>\r\n                        {(this.props.report != null ? \r\n                            <PDFDownloadLink\r\n                                document={<DocuPDF content={this.props.report.text} />}\r\n                                fileName={this.props.report.download_title}\r\n                            >\r\n                                <Button label=\"Descargar Reporte\" icon=\"pi pi-check\" />\r\n                            </PDFDownloadLink>\r\n                            : null\r\n                        )}\r\n                    </TabPanel>\r\n                </TabView>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Graphics","import React, {Component} from \"react\";\r\n\r\n//prime react\r\nimport { TabMenu } from 'primereact/tabmenu';\r\n\r\n//pages\r\nimport Home from \"./Home\";\r\nimport Data from \"./Data\";\r\nimport Variables from \"./Variables\";\r\nimport Graphics from \"./Graphics\";\r\n\r\nexport class Menu extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            activeIndex: 0,\r\n            data: null,\r\n            report: null\r\n        }\r\n        this.items = [\r\n            { label: 'Home', icon: 'pi pi-fw pi-home' },\r\n            { label: 'Data', icon: 'pi pi-fw pi-database' },\r\n            { label: 'Variables', icon: 'pi pi-fw pi-pencil' },\r\n            { label: 'Graphics', icon: 'pi pi-fw pi-chart-line' }\r\n        ];\r\n    }\r\n\r\n    getResponseData(res_data) {\r\n        this.setState({data: res_data})\r\n        this.setState({ activeIndex: 2 })\r\n    }\r\n\r\n    GraphReport(res_report){\r\n        this.setState({report: res_report})\r\n        this.setState({ activeIndex: 3 })\r\n    }\r\n\r\n    render() {\r\n        if (this.state.activeIndex === 1) {\r\n            return (\r\n                <div>\r\n                    <TabMenu model={this.items} activeIndex={this.state.activeIndex} onTabChange={(e) => this.setState({ activeIndex: e.index })} />\r\n                    <Data callback={this.getResponseData.bind(this)} />\r\n                </div>\r\n            )\r\n        }\r\n        if (this.state.activeIndex === 2) {\r\n            return (\r\n                <div>\r\n                    <TabMenu model={this.items} activeIndex={this.state.activeIndex} onTabChange={(e) => this.setState({ activeIndex: e.index })} />\r\n                    <Variables data={this.state.data} callback={this.GraphReport.bind(this)}/>\r\n                </div>\r\n            )\r\n        }\r\n        if (this.state.activeIndex === 3) {\r\n            return (\r\n                <div>\r\n                    <TabMenu model={this.items} activeIndex={this.state.activeIndex} onTabChange={(e) => this.setState({ activeIndex: e.index })} />\r\n                    <Graphics  report={this.state.report}/>\r\n                </div>\r\n            )\r\n        }\r\n        return (\r\n            <div>\r\n                <TabMenu model={this.items} activeIndex={this.state.activeIndex} onTabChange={(e) => this.setState({ activeIndex: e.index })} />\r\n                <Home />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Menu","import React from \"react\";\r\n\r\n//prime imports\r\nimport 'primereact/resources/themes/saga-purple/theme.css'\r\nimport 'primereact/resources/primereact.min.css'\r\nimport 'primeicons/primeicons.css'\r\nimport 'primeflex/primeflex.css'\r\n\r\n//pages\r\nimport { Menu } from './pages/Menu'\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Menu/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}