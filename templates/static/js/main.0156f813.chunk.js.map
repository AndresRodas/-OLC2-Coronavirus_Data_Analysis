{"version":3,"sources":["pages/Home.js","services/DataService.js","config/API.js","pages/Data.js","pages/Variables.js","DocuPDF.js","pages/Graphics.js","pages/Menu.js","App.js","index.js"],"names":["Home","className","style","fontFamily","legend","value","React","Component","DataService","file","a","formData","FormData","append","fetch","method","body","then","resp","console","log","Data","props","dataService","myUploader","files","handleSubmit","state","title","subTitle","name","accept","customUpload","uploadHandler","this","Variables","onPredictChange","e","setState","predict","products1","products2","products3","products4","editingRows","columns","field","header","predictions","label","options","priceEditor","textEditor","onChange","placeholder","htmlFor","id","type","icon","DocuPDF","Texto","size","display","flexDirection","justifyContent","alignItems","backgroundColor","padding","color","fontSize","src","alt","maxWidth","maxHeight","fontStyle","textAlign","marginTop","Graphics","text","position","data","labels","datasets","fill","borderColor","borderWidth","width","height","Menu","activeIndex","items","model","onTabChange","index","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0156f813.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport { Fieldset } from 'primereact/fieldset';\r\nimport { InputText } from \"primereact/inputtext\";\r\n\r\nclass Home extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"p-m-6\">\r\n                <h1 className=\"p-text-bold\" style={{fontFamily: \"cursive\"}} >Coronavirus Data Analysis</h1>\r\n                <Fieldset legend=\"Resumen\" className=\"p-shadow-5\" >\r\n                    <p>Durante la emergencia sanitaria provocada por el COVID-19, se ha observado \r\n                        un notable incremento en la aplicación de nuevas tecnologías al campo de \r\n                        la salud y la investigación. Desde la creación de todo tipo de dispositivos \r\n                        inteligentes destinados a detectar el más mínimo síntoma indicativo de contagio, \r\n                        hasta el diseño de nuevos patrones de investigación en la cura del nuevo coronavirus.</p>\r\n                    <p>Sin duda, la IA (Inteligencia Artificial) ha estado presente en todas y cada una \r\n                        de las etapas de esta pandemia, e incluso en momentos previos a ella. En este \r\n                        sentido, se trató de una startup canadiense –BlueDot- que, gracias a un algoritmo \r\n                        basado en inteligencia artificial, logró predecirlo.\r\n                        Mediante el procesamiento y análisis de noticias de todos los países del mundo, \r\n                        junto con información relacionada con rutas de vuelos comerciales y brotes de \r\n                        enfermedades, pudieron predecir, no solo la existencia de una enfermedad \r\n                        potencialmente pandémica, sino también el epicentro de la enfermedad. Así mismo, \r\n                        como su trayectoria más inmediata.</p>\r\n                    <p>Así, la aplicación de la IA en esta pandemia global ha supuesto un antes y un \r\n                        después en el campo epidemiológico, ya que no solo ha permitido establecer un \r\n                        mayor control sobre la propagación del virus, sino que ha participado activamente \r\n                        en el diagnóstico, tratamiento. e investigación para poner fin a este brote lo \r\n                        antes posible.</p>\r\n                </Fieldset><br />\r\n                <Fieldset legend=\"Predicción de Datos con Python\" className=\"p-shadow-5\">\r\n                    <p>Entre los lenguajes de programación, Python es conocido como aquel que logra \r\n                        dominar todas las estadísticas, relacionadas con la minería de datos e incluso \r\n                        el aprendizaje automático, es software libre, por lo que muchas personas han \r\n                        podido usarlo para desarrollar sus soluciones dando un lugar que ha Bibliotecas \r\n                        muy interesantes donde se pueden encontrar casi todas las técnicas de machine \r\n                        learning que existen actualmente, por supuesto, tiene su parte negativa, y es \r\n                        que derivada del hecho de que muchas personas han aportado, tiene su sintaxis \r\n                        específica para cada caso, lo que hace aprendizaje un poco complejo.</p>\r\n                    <p>Actualmente existe una solución muy viable, ya que Scikit-learn consiste en \r\n                        ser una estandarización conformada en una librería de código abierto, que \r\n                        intenta unificar en un mismo contexto todos los algoritmos y funciones posibles, \r\n                        ayudando en gran medida las fases de preprocesamiento, entrenamiento, \r\n                        optimización y validación. de los diferentes métodos predictivos utilizados.</p>\r\n                    <p>Scikit-learn da la posibilidad de tener una gran cantidad de opciones de \r\n                        procesamiento de datos, de las cuales solo algunas serán utilizadas a lo \r\n                        largo de este informe, pero se recomienda poder buscar la documentación de esta \r\n                        herramienta que es muy útil para realizar este tipo. de predicciones como las que \r\n                        se encuentran a lo largo del documento. Un factor que hay que tener en cuenta \r\n                        respecto a la citada biblioteca es su alto nivel de madurez, con el que logra \r\n                        definir modelos predictivos que incluso se utilizan en producción, por lo que se \r\n                        toma como base para el desarrollo de las diferentes soluciones, encuentra se \r\n                        centrará en la metodología de regresión lineal.</p>\r\n                </Fieldset><br />\r\n                <Fieldset legend=\"Regresión Lineal\" className=\"p-shadow-5\">\r\n                    <p>Este modelo de predicción se basa en la posibilidad de calcular una línea recta que\r\n                         se acomode en la mayor medida posible a las diferentes muestras que se identifican\r\n                          dentro de la población que se toma para el análisis.  La forma de calcularlo se \r\n                          basa en que la regresión lineal se enfoca en definir los parámetros que se \r\n                          encuentran o caracterizan una función lineal, y = mx + b, de tal forma que los \r\n                          errores cuadráticos en la medición que se realizan, pueden ser eliminado hasta \r\n                          cierto punto. A la línea definida por la función descrita anteriormente, minimizando \r\n                          la distancia de cada médico a la línea, manualmente no es tan complejo, aunque el \r\n                          propósito de las diferentes soluciones que se presentan es realizar un modelo totalmente\r\n                           automatizado.</p>\r\n                    <p>Los diferentes datos que se manejan en el informe no solo se tratan de esta forma, \r\n                        además en algunos casos no se tienen en cuenta solo 2 dimensiones para extraer alguna \r\n                        información, pero cuando se trata de datos tridimensionales, muchas veces es preferible \r\n                        optar para un Gradiente Descendente, el cual itera para poder seguir el proceso anterior, \r\n                        de tal manera que se encuentre la línea que mejor se ajuste al contorno definido por las \r\n                        muestras seleccionadas, lo que le otorga un mayor dato computacional, se usa frecuentemente \r\n                        en multidimensional casos.</p>\r\n                </Fieldset><br />\r\n                <Fieldset legend=\"Medida de Error\" className=\"p-shadow-5\">\r\n                    <p>Como parte fundamental de los modelos con los que se definirá la información es que cuando \r\n                        existen problemas de esta naturaleza, ya sea machine learning o incluso ciencia de datos,\r\n                         en muy raras ocasiones son exactos, principalmente si se trata de la predicción del avance. \r\n                         de un virus patológico, ya que los resultados que se producen son probables, suelen ser \r\n                         estimaciones, esta razón da como resultado que siempre debe existir algún mecanismo que \r\n                         pueda evaluar la variación que existe y se da a lo largo de los cálculos realizados, claro \r\n                         está para saber los resultados que se están presentando como su precisión, y que estos \r\n                         puedan ser objetiva y cuantificablemente comparables, aplicando otros métodos adicionales \r\n                         que puedan sustentar en función de sus características hacia el comportamiento del conjunto de datos.</p>\r\n                </Fieldset><br />\r\n                <Fieldset legend=\"Descripción\" className=\"p-shadow-5\">\r\n                    <p>Esta aplicación tendrá como objetivo principal que un usuario pueda generar distintos análisis de \r\n                        información basados de un origen de datos (un archivo en Excel) y diferentes variables que se deberán \r\n                        configurar dentro del sistema según sea el ánalisis a realizar.  La aplicación deberá ser capaz \r\n                        de poder analizar y predecir lo siguiente:</p>\r\n                    <p>● Tendencia de la infección por Covid-19 en un País.</p>\r\n                    <p>● Predicción de Infectados en un País.</p>\r\n                    <p>● Indice de Progresión de la pandemia.</p>                \r\n                    <p>● Predicción de mortalidad por COVID en un Departamento.</p>\r\n                    <p>● Predicción de mortalidad por COVID en un País.</p>\r\n                    <p>● Análisis del número de muertes por coronavirus en un País.</p>\r\n                    <p>● Tendencia del número de infectados por día de un País.</p>\r\n                    <p>● Predicción de casos de un país para un año.</p>\r\n                    <p>● Tendencia de la vacunación de en un País.</p>\r\n                    <p>● Ánalisis Comparativo de Vacunaciópn entre 2 paises.</p>\r\n                    <p>● Porcentaje de hombres infectados por covid-19 en un País desde el primer caso activo</p>\r\n                    <p>● Ánalisis Comparativo entres 2 o más paises o continentes.</p>\r\n                    <p>● Muertes promedio por casos confirmados y edad de covid 19 en un País.</p>\r\n                    <p>● Muertes según regiones de un país - Covid 19.</p>\r\n                    <p>● Tendencia de casos confirmados de Coronavirus en un departamento de un País.</p>\r\n                    <p>● Porcentaje de muertes frente al total de casos en un país, región o continente.</p>\r\n                    <p>● Tasa de comportamiento de casos activos en relación al número de muertes en un continente.</p>\r\n                    <p>● Comportamiento y clasificación de personas infectadas por COVID-19 por municipio en un País.</p>\r\n                    <p>● Predicción de muertes en el último día del primer año de infecciones en un país.</p>\r\n                    <p>● Tasa de crecimiento de casos de COVID-19 en relación con nuevos casos diarios y tasa de muerte por COVID-19.</p>\r\n                    <p>● Predicciones de casos y muertes en todo el mundo - Neural Network MLPRegressor</p>\r\n                    <p>● Tasa de mortalidad por coronavirus (COVID-19) en un país.</p>\r\n                    <p>● Factores de muerte por COVID-19 en un país.</p>\r\n                    <p>● Comparación entre el número de casos detectados y el número de pruebas de un país.</p>\r\n                    <p>● Predicción de casos confirmados por día</p>\r\n                </Fieldset><br />\r\n                <Fieldset legend=\"Datos del Estudiante\" className=\"p-shadow-5\">\r\n                    <div className=\"p-col-12 p-md-4\">\r\n                        <div className=\"p-inputgroup\">\r\n                            <span className=\"p-inputgroup-addon\">Nombre</span>\r\n                            <InputText value=\"José Andres Rodas Arrecis\"/>\r\n                            <span className=\"p-inputgroup-addon\"><i className=\"pi pi-user\"></i></span>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"p-col-12 p-md-4\">\r\n                            <div className=\"p-inputgroup\">\r\n                                <span className=\"p-inputgroup-addon\">Carnet</span>\r\n                                <InputText value=\"2015 04220\" />\r\n                                <span className=\"p-inputgroup-addon\"><i className=\"pi pi-wallet\"></i></span>\r\n                            </div>\r\n                        </div>\r\n                </Fieldset><br />\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Home","import {URL} from '../config/API'\r\n\r\nexport class DataService {\r\n    \r\n    async handleSubmit(file){\r\n\r\n        const formData = new FormData()\r\n        formData.append('myFile', file)\r\n        \r\n        const res = await fetch(`${URL}/testeo`, {\r\n            method: 'POST',\r\n            // headers: {\r\n            //     'Content-Type': 'multipart/form-data'\r\n            // },\r\n            body: formData\r\n        })\r\n        .then(function(resp){\r\n            console.log(resp)\r\n        })\r\n    }\r\n}","export const URL = \"http://127.0.0.1:5000\";","import React from \"react\";\r\n\r\n//prime\r\nimport { FileUpload } from 'primereact/fileupload';\r\nimport { Card } from 'primereact/card';\r\n\r\n//services\r\nimport { DataService } from '../services/DataService'\r\n\r\nclass Data extends React.Component {\r\n\r\n    dataService = new DataService()\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {}\r\n    }\r\n\r\n    myUploader = (file) => {\r\n        console.log(file.files)\r\n\r\n        this.dataService.handleSubmit(file.files[0])\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"p-grid p-justify-center\"> \r\n                <Card title=\"Selecciona la Fuente de Datos\" subTitle=\"(.csv, .xls, .xlsx y .json)\"  className=\"p-my-6 p-shadow-5\">\r\n                    <FileUpload name=\"demo\" accept=\".csv\" customUpload uploadHandler={this.myUploader} className=\"p-mx-6\"/>\r\n                </Card> \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Data","import React from \"react\";\r\n\r\n//prime\r\nimport { Dropdown } from 'primereact/dropdown';\r\nimport { Card } from 'primereact/card';\r\nimport { InputText } from 'primereact/inputtext';\r\nimport { Button } from 'primereact/button';\r\n\r\nclass Variables extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            predict: null,\r\n            products1: [23,323],\r\n            products2: null,\r\n            products3: null,\r\n            products4: null,\r\n            editingRows: {}\r\n        }\r\n        this.columns = [\r\n            { field: 'nombre', header: 'Nombre' },\r\n            { field: 'campo', header: 'Campo Archivos' }\r\n        ];\r\n        this.predictions = [\r\n            {label: 'New York', value: 'NY'},\r\n            {label: 'Rome', value: 'RM'},\r\n            {label: 'London', value: 'LDN'},\r\n            {label: 'Istanbul', value: 'IST'},\r\n            {label: 'Paris', value: 'PRS'}\r\n        ]\r\n    }\r\n\r\n    cellEditor(options) {\r\n        if (options.field === 'price')\r\n            return this.priceEditor(options);\r\n        else\r\n            return this.textEditor(options);\r\n    }\r\n    \r\n\r\n    onPredictChange = (e) =>{\r\n        console.log(e.value)\r\n        this.setState({predict: e.value})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"p-grid p-justify-center\"> \r\n                <Card title=\"Parametrización de Variables\" className=\"p-my-6 p-shadow-5\">\r\n                    <div className=\"p-mt-4 p-mb-6\">\r\n                        <label>Predicción a realizar:</label>\r\n                        <Dropdown className=\"p-ml-4\" value={this.state.predict} options={this.predictions} onChange={ this.onPredictChange } placeholder=\"Seleccione una predicción\"/><br></br> \r\n                    </div>\r\n                    <div className=\"p-my-4\">\r\n                        <h4>Variable Independiente:</h4>\r\n                        <div className=\"p-fluid p-formgrid p-grid\">\r\n                            <div className=\"p-field p-col\">\r\n                                <label htmlFor=\"firstname2\">Nombre</label>\r\n                                <InputText id=\"firstname2\" type=\"text\"/>\r\n                            </div>\r\n                            <div className=\"p-field p-col\">\r\n                                <label htmlFor=\"lastname2\">Campo Archivo</label>\r\n                                <InputText id=\"lastname2\" type=\"text\"/>\r\n                            </div>\r\n                        </div>\r\n                        <h4>Variables Dependientes:</h4>\r\n                        <div className=\"p-fluid p-formgrid p-grid\">\r\n                            <div className=\"p-field p-col\">\r\n                                <label htmlFor=\"firstname2\">Nombre</label>\r\n                                <InputText id=\"firstname2\" type=\"text\"/>\r\n                                \r\n                            </div>\r\n                            <div className=\"p-field p-col\">\r\n                                <label htmlFor=\"lastname2\">Campo Archivo</label>\r\n                                <InputText  id=\"lastname2\" type=\"text\"/>\r\n                                \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <Button label=\"Calcular\" icon=\"pi pi-check\" />\r\n                </Card> \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Variables","import React from \"react\";\r\nimport { Document, Page, Text, View, Image } from \"@react-pdf/renderer\";\r\n\r\nconst DocuPDF = ({ Texto }) => {\r\n  const lorem = \"Lorem ipsum dolor sit amet, consectetur adipiscing elit.\";\r\n  return (\r\n    <Document>\r\n      <Page\r\n        size=\"A4\"\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n          backgroundColor: \"white\",\r\n        }}\r\n      >\r\n        <View\r\n          style={{\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            backgroundColor: \"white\",\r\n            padding: 10,\r\n          }}\r\n        >\r\n          <Text style={{ color: \"#3388af\", fontSize: \"42px\" }}>\r\n            {Texto}\r\n          </Text>\r\n          <Text>Por {Texto}</Text>\r\n          <Image\r\n            src=\"https://picsum.photos/600/400\"\r\n            alt=\"random image\"\r\n            style={{ maxWidth: \"600px\", maxHeight: \"400\" }}\r\n          />\r\n          <Text\r\n            style={{\r\n              color: \"gray\",\r\n              fontStyle: \"italic\",\r\n              fontSize: \"10px\",\r\n            }}\r\n          >\r\n            {lorem}\r\n          </Text>\r\n\r\n          <Text style={{ textAlign: \"justify\", marginTop: \"22px\" }}>\r\n            {Texto}\r\n          </Text>\r\n        </View>\r\n      </Page>\r\n    </Document>\r\n  );\r\n};\r\n\r\nexport default DocuPDF;\r\n","import React from \"react\";\r\n\r\n//prime\r\nimport { Chart } from 'primereact/chart';\r\nimport { Button } from 'primereact/button';\r\nimport { TabView, TabPanel } from 'primereact/tabview';\r\n//PDF\r\nimport { PDFDownloadLink, PDFViewer } from \"@react-pdf/renderer\";\r\nimport DocuPDF from '../DocuPDF'\r\n\r\nclass Graphics extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            data : {\r\n                labels: ['5','7','8','10','11','15','18'],\r\n                datasets: [\r\n                  {\r\n                    label: 'First Dataset',\r\n                    data: [39.26, 46.19, 49.65, 56.59, 60.05, 73.92, 84.31],\r\n                    fill: false,\r\n                    borderColor: 'black',\r\n                          backgroundColor: 'blue'\r\n                  },\r\n                  { \r\n                    label: 'Second Dataset',\r\n                    data: [35, 45, 50, 60, 65, 75, 80],\r\n                    fill: false,\r\n                    borderColor: 'white',\r\n                          backgroundColor: 'red',\r\n                          borderWidth: 0\r\n                  }\r\n                ]\r\n              },\r\n            title: 'Titulo del reporte de Coronavirus 2021',\r\n            text: 'Aqui tiene que estar todo el analisis y la conclusion del reporte generado de los datos de covid-19'\r\n        }\r\n\r\n    }\r\n      \r\n    options = {\r\n        title: {\r\n            display: true,\r\n            text: 'My Title',\r\n            fontSize: 16\r\n        },\r\n        legend: {\r\n            position: 'bottom'\r\n        }\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div className=\"p-grid p-justify-center\" >\r\n                <TabView className=\"p-col-8 p-my-6 p-shadow-5\">\r\n                    <TabPanel header=\"Gráfica\">\r\n                            <Chart type='line' data={this.state.data} options={this.options} />\r\n                    </TabPanel>\r\n                    <TabPanel header=\"Reporte\">\r\n                        <Button label=\"Descargar\" icon=\"pi pi-check\" />\r\n                        <PDFViewer style={{ width: \"100%\", height: \"90vh\" }}>\r\n                            <DocuPDF Texto={\"Este es el texto que debe desplegarse en el documento PDF que sera un reporte\"} />\r\n                        </PDFViewer>\r\n                    </TabPanel>\r\n                </TabView>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Graphics","import React, {Component} from \"react\";\r\n\r\n//prime react\r\nimport { TabMenu } from 'primereact/tabmenu';\r\n\r\n//pages\r\nimport Home from \"./Home\";\r\nimport Data from \"./Data\";\r\nimport Variables from \"./Variables\";\r\nimport Graphics from \"./Graphics\";\r\n\r\nexport class Menu extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            activeIndex: 0\r\n        }\r\n        this.items = [\r\n            { label: 'Home', icon: 'pi pi-fw pi-home' },\r\n            { label: 'Data', icon: 'pi pi-fw pi-database' },\r\n            { label: 'Variables', icon: 'pi pi-fw pi-pencil' },\r\n            { label: 'Graphics', icon: 'pi pi-fw pi-chart-line' }\r\n        ];\r\n    }\r\n\r\n    render() {\r\n        if (this.state.activeIndex === 1) {\r\n            return (\r\n                <div>\r\n                    <TabMenu model={this.items} activeIndex={this.state.activeIndex} onTabChange={(e) => this.setState({ activeIndex: e.index })} />\r\n                    <Data />\r\n                </div>\r\n            )\r\n        }\r\n        if (this.state.activeIndex === 2) {\r\n            return (\r\n                <div>\r\n                    <TabMenu model={this.items} activeIndex={this.state.activeIndex} onTabChange={(e) => this.setState({ activeIndex: e.index })} />\r\n                    <Variables />\r\n                </div>\r\n            )\r\n        }\r\n        if (this.state.activeIndex === 3) {\r\n            return (\r\n                <div>\r\n                    <TabMenu model={this.items} activeIndex={this.state.activeIndex} onTabChange={(e) => this.setState({ activeIndex: e.index })} />\r\n                    <Graphics />\r\n                </div>\r\n            )\r\n        }\r\n        return (\r\n            <div>\r\n                <TabMenu model={this.items} activeIndex={this.state.activeIndex} onTabChange={(e) => this.setState({ activeIndex: e.index })} />\r\n                <Home />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Menu","import React from \"react\";\r\n\r\n//prime imports\r\nimport 'primereact/resources/themes/saga-purple/theme.css'\r\nimport 'primereact/resources/primereact.min.css'\r\nimport 'primeicons/primeicons.css'\r\nimport 'primeflex/primeflex.css'\r\n\r\n//pages\r\nimport { Menu } from './pages/Menu'\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Menu/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}